package com.hospitalIS.view;


import com.hospitalIS.model.HospitalISModel;
import com.hospitalIS.util.ValidationUtil;
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class HospitalIS extends javax.swing.JFrame {

    private List<HospitalISModel> patientList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;

    /**
     * Creates new form CollegeApp
     */
    public HospitalIS() {
        setLocation(100,10);
        setResizable(false);
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress(); // Show loading screen and initiate progress       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblMainBarSlogan = new javax.swing.JLabel();
        lblMainBarLogo = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        lblHomeText1 = new javax.swing.JLabel();
        btnLearnMore1 = new javax.swing.JButton();
        lblSubHeading = new javax.swing.JLabel();
        lblHomeImage = new javax.swing.JLabel();
        pnlService = new javax.swing.JPanel();
        lblAppointment = new javax.swing.JLabel();
        lblPatient = new javax.swing.JLabel();
        lblSupply = new javax.swing.JLabel();
        lblSupport = new javax.swing.JLabel();
        lblPharmacy = new javax.swing.JLabel();
        lblFinancial = new javax.swing.JLabel();
        lblstaff = new javax.swing.JLabel();
        lblReport = new javax.swing.JLabel();
        lblService = new javax.swing.JLabel();
        lblSubhead = new javax.swing.JLabel();
        lblServiceImage = new javax.swing.JLabel();
        pnlAdmin = new javax.swing.JPanel();
        spTblStudent1 = new javax.swing.JScrollPane();
        tblPatientList = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtDoctorName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtDepartment = new javax.swing.JTextField();
        txtPatientId = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        pnlAboutUS = new javax.swing.JPanel();
        lblHeading = new javax.swing.JLabel();
        lblConnectUs = new javax.swing.JLabel();
        lblContact = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblMdImage = new javax.swing.JLabel();
        lblFounderImage = new javax.swing.JLabel();
        lblMdTitle = new javax.swing.JLabel();
        lblFounderTitle = new javax.swing.JLabel();
        lblMdSubTitle = new javax.swing.JLabel();
        lblFounderSubTitle = new javax.swing.JLabel();
        lblAboutImage = new javax.swing.JLabel();
        pnlLoginScreen = new javax.swing.JPanel();
        txtFldLoginUsername = new javax.swing.JTextField();
        pwdFldLogin = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lblLoginError = new javax.swing.JLabel();
        lblLoginTitle = new javax.swing.JLabel();
        lblLoginSubTitle = new javax.swing.JLabel();
        lblLoginImage = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        pgBarSplashScreen = new javax.swing.JProgressBar(0,100);
        lblLoading = new javax.swing.JLabel();
        lblCompanyLogo = new javax.swing.JLabel();
        lblLoadingText = new javax.swing.JLabel();
        lblLoadingImage = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1130, 714));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1130, 714));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1130, 714));

        pnlMainBar.setBackground(new java.awt.Color(163, 204, 212));

        lblMainBarSlogan.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        lblMainBarSlogan.setForeground(new java.awt.Color(255, 255, 255));
        lblMainBarSlogan.setText("Welcome to Subidha Hospital, Simplifying Hospital Management");

        lblMainBarLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/companyLogo1.png"))); // NOI18N

        btnLogout.setBackground(new java.awt.Color(63, 56, 109));
        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblMainBarLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMainBarLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPaneMain.setBackground(new java.awt.Color(255, 255, 255));
        tabPaneMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0));
        tabPaneMain.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        pnlHome.setBackground(new java.awt.Color(208, 153, 217));
        pnlHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHomeText1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblHomeText1.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeText1.setText("<html>Subidha <br>Hospital</html>");
        pnlHome.add(lblHomeText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 190, 140));

        btnLearnMore1.setBackground(new java.awt.Color(168, 81, 182));
        btnLearnMore1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLearnMore1.setForeground(new java.awt.Color(255, 255, 255));
        btnLearnMore1.setText("Learn more");
        btnLearnMore1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLearnMore1ActionPerformed(evt);
            }
        });
        pnlHome.add(btnLearnMore1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 160, 33));

        lblSubHeading.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        lblSubHeading.setText("Where peopleâ€™s health comes first");
        pnlHome.add(lblSubHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 220, 50));

        lblHomeImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/home.jpg"))); // NOI18N
        pnlHome.add(lblHomeImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 620, 580));

        tabPaneMain.addTab("Home", pnlHome);

        pnlService.setBackground(new java.awt.Color(208, 153, 217));
        pnlService.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAppointment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAppointment.setText("<html>Appointment <br>Management</html>");
        pnlService.add(lblAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 110, 40));

        lblPatient.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPatient.setText("<html>Patient<br> Management</html>");
        pnlService.add(lblPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 100, 40));

        lblSupply.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSupply.setText("<html>Supply<br> Management</html>");
        pnlService.add(lblSupply, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 230, 100, 40));

        lblSupport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSupport.setText("<html>Support <br>Management</html>");
        pnlService.add(lblSupport, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 440, 110, 40));

        lblPharmacy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPharmacy.setText("<html>Pharmacy and Lab <br>Management</html>");
        pnlService.add(lblPharmacy, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 440, 140, 40));

        lblFinancial.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFinancial.setText("<html>Financial<br> Management</html>");
        pnlService.add(lblFinancial, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 130, 40));

        lblstaff.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblstaff.setText("<html>Staff<br> Management</html>");
        pnlService.add(lblstaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, 100, 40));

        lblReport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblReport.setText("<html>Report <br>Management</html>");
        pnlService.add(lblReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 130, -1));

        lblService.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        lblService.setText("Our Service");
        pnlService.add(lblService, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 34, 221, 37));

        lblSubhead.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        lblSubhead.setText(" >>Subidha Hospital provides top-notch care in people's health specialties.");
        pnlService.add(lblSubhead, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 720, 40));

        lblServiceImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/service2.jpg"))); // NOI18N
        pnlService.add(lblServiceImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 980, 540));

        tabPaneMain.addTab("Service List", pnlService);

        pnlAdmin.setBackground(new java.awt.Color(208, 153, 217));

        tblPatientList.setBackground(new java.awt.Color(153, 153, 153));
        tblPatientList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblPatientList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PatientID", "PatientName", "DoctorName", "Address", "Age", "Contact", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatientList.setGridColor(new java.awt.Color(0, 0, 0));
        tblPatientList.setPreferredSize(new java.awt.Dimension(340, 619));
        tblPatientList.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblPatientList.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblPatientList.setShowGrid(true);
        tblPatientList.getTableHeader().setReorderingAllowed(false);
        tblPatientList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientListMouseClicked(evt);
            }
        });
        spTblStudent1.setViewportView(tblPatientList);
        if (tblPatientList.getColumnModel().getColumnCount() > 0) {
            tblPatientList.getColumnModel().getColumn(2).setResizable(false);
        }

        btnAdd.setBackground(new java.awt.Color(102, 204, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(163, 204, 212));
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(163, 204, 212));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtDoctorName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DoctorName", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N

        txtAddress.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N

        txtDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N
        txtDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartmentActionPerformed(evt);
            }
        });

        txtPatientId.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PatientID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N

        txtPatientName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PatientName", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N

        txtContact.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N

        txtAge.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N

        btnUpdate.setBackground(new java.awt.Color(102, 204, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminLayout = new javax.swing.GroupLayout(pnlAdmin);
        pnlAdmin.setLayout(pnlAdminLayout);
        pnlAdminLayout.setHorizontalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminLayout.createSequentialGroup()
                        .addComponent(spTblStudent1, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
                        .addGap(78, 78, 78))
                    .addGroup(pnlAdminLayout.createSequentialGroup()
                        .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAdminLayout.createSequentialGroup()
                                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAdminLayout.createSequentialGroup()
                                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlAdminLayout.setVerticalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(spTblStudent1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAdminLayout.createSequentialGroup()
                        .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(pnlAdminLayout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("AdminControl", pnlAdmin);

        pnlAboutUS.setBackground(new java.awt.Color(208, 153, 217));

        lblHeading.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblHeading.setText("<html>&nbsp; At subidha hospital, we care for people with<br>\n kindness, use the best medical tools, and work <br>&nbsp; &nbsp; to create a healthier future for everyone.</html>");

        lblConnectUs.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblConnectUs.setText("<html>Connect with us<br>\nInstagram<br>\nTwitter<br>\nFacebook<br>\nLinkedIn</html>");

        lblContact.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblContact.setText("<html>Contact us<br>\n9807090836<br>\n9841427111<br>\n9803929945</html>");

        lblLocation.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLocation.setText("<html>Location<br>\nBelbari-3, Morang <br>\nNepal</html>");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEmail.setText("medicalsubidha@gmail.com");

        lblMdImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/sathi.jpg"))); // NOI18N

        lblFounderImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/suyesh.jpg"))); // NOI18N

        lblMdTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMdTitle.setForeground(new java.awt.Color(153, 0, 255));
        lblMdTitle.setText("Sugam Shrestha");

        lblFounderTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFounderTitle.setForeground(new java.awt.Color(153, 0, 255));
        lblFounderTitle.setText("Suyesh Neupane");

        lblMdSubTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMdSubTitle.setText("Managing Director");

        lblFounderSubTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFounderSubTitle.setText("Founder");

        lblAboutImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/about_1.png"))); // NOI18N

        javax.swing.GroupLayout pnlAboutUSLayout = new javax.swing.GroupLayout(pnlAboutUS);
        pnlAboutUS.setLayout(pnlAboutUSLayout);
        pnlAboutUSLayout.setHorizontalGroup(
            pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUSLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAboutUSLayout.createSequentialGroup()
                        .addComponent(lblAboutImage, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(50, Short.MAX_VALUE))
                    .addGroup(pnlAboutUSLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlAboutUSLayout.createSequentialGroup()
                                .addComponent(lblMdTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115)
                                .addComponent(lblFounderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAboutUSLayout.createSequentialGroup()
                                .addComponent(lblMdSubTitle)
                                .addGap(133, 133, 133)
                                .addComponent(lblFounderSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)))
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAboutUSLayout.createSequentialGroup()
                        .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAboutUSLayout.createSequentialGroup()
                        .addComponent(lblConnectUs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMdImage, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(lblFounderImage, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        pnlAboutUSLayout.setVerticalGroup(
            pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUSLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMdImage, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFounderImage, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMdTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFounderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFounderSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMdSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUSLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAboutImage)
                .addGap(18, 18, 18)
                .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblConnectUs)
                    .addGroup(pnlAboutUSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(lblEmail)
                .addGap(26, 26, 26))
        );

        tabPaneMain.addTab("About Us", pnlAboutUS);

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPaneMain))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPaneMain)
                .addContainerGap())
        );

        pnlLoginScreen.setBackground(new java.awt.Color(244, 246, 252));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1130, 714));
        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1130, 714));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1130, 714));
        pnlLoginScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtFldLoginUsername.setBackground(new java.awt.Color(110, 156, 172));
        txtFldLoginUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0), "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        txtFldLoginUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldLoginUsernameActionPerformed(evt);
            }
        });
        pnlLoginScreen.add(txtFldLoginUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 262, 59));

        pwdFldLogin.setBackground(new java.awt.Color(110, 156, 172));
        pwdFldLogin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0), "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        pnlLoginScreen.add(pwdFldLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 262, 59));

        btnLogin.setBackground(new java.awt.Color(50, 59, 125));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        pnlLoginScreen.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 530, 260, 50));

        lblLoginError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));
        lblLoginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlLoginScreen.add(lblLoginError, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 490, 350, 30));

        lblLoginTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblLoginTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginTitle.setText("Sign in to Subidha Hospital");
        pnlLoginScreen.add(lblLoginTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 450, -1));

        lblLoginSubTitle.setBackground(new java.awt.Color(234, 192, 32));
        lblLoginSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLoginSubTitle.setForeground(new java.awt.Color(153, 204, 255));
        lblLoginSubTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginSubTitle.setText("Please enter your login details below using this app.");
        pnlLoginScreen.add(lblLoginSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, -1, -1));

        lblLoginImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/Login.png"))); // NOI18N
        pnlLoginScreen.add(lblLoginImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 710));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1130, 714));
        setSize(new java.awt.Dimension(1130, 714));

        pnlLoadingScreen.setBackground(new java.awt.Color(225, 248, 220));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1130, 714));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1130, 714));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1130, 714));
        pnlLoadingScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pgBarSplashScreen.setStringPainted(true);
        pgBarSplashScreen.setForeground(new java.awt.Color(0, 0, 0));
        pnlLoadingScreen.add(pgBarSplashScreen, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 530, 860, 31));

        lblLoading.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblLoading.setText("Loading...");
        pnlLoadingScreen.add(lblLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 90, 30));

        lblCompanyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/companyLogo.png"))); // NOI18N
        pnlLoadingScreen.add(lblCompanyLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 240, 200));

        lblLoadingText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLoadingText.setText("<html>Subidha Hospital is the region's most trusted provider of peopleâ€™s healthcare. We have <br>\n&nbsp; &nbsp; &nbsp; &nbsp;  a highly trained team of medical experts, advanced facilities and unwavering<br>\n&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; commitment to the welfare of our patients.</html>");
        pnlLoadingScreen.add(lblLoadingText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 760, 110));

        lblLoadingImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospitalIS/resources/loading page image.png"))); // NOI18N
        pnlLoadingScreen.add(lblLoadingImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, -4, 1130, 720));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initializes the layout of the application by setting up the CardLayout
     * and adding panels for different screens. Each panel is uniquely
     * identified for easy navigation between screens.
     */
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }

    /**
     * Initializes the application's data, including the student list and table.
     * Populates the student list with sample data for demonstration purposes.
     */
    private void initializeData() {
        patientList = new LinkedList<>();

    // Create a table model with updated column names
    DefaultTableModel model = new DefaultTableModel(
        new Object[][]{}, // No initial data
        new String[]{ // Updated column names
            "Patient ID", "Patient Name", "Doctor Name", 
            "Address", "Age", "Contact", "Department"
        }
    );
    tblPatientList.setModel(model);

    // Example data for the updated table
    // Correct order according to your constructor (patientId first)
    registerPatient(new HospitalISModel(10001, "John Doe", "Dr Suyesh", "Pokhara", 20, "9803729956", "Cardiology"));
    registerPatient(new HospitalISModel(10002, "Alice Johnson", "Dr Snehal", "Kathmandu", 25, "9876543211", "Neurology"));
    }

    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    // Method to add student data and populate the table
    private void registerPatient(HospitalISModel patient) {
        patientList.add(patient); // Assuming studentList is a list holding the patient data

    // Assuming tblStudent is your JTable for patients
    DefaultTableModel model = (DefaultTableModel) tblPatientList.getModel();

    // Adding a new row to the table with the PatientID in the first column, followed by PatientName, then DoctorName
    model.addRow(new Object[]{
        String.valueOf(patient.getPatientId()), // PatientID in the first column
        patient.getPatientName(), // PatientName in the second column
        patient.getDoctorName(), // DoctorName in the third column
        patient.getAddress(), 
        String.valueOf(patient.getAge()), // Convert age to String for the table
        patient.getContact(), 
        patient.getDepartment()
    });
    }

//    private Boolean updateStudent(StudentModel student){
//        
//    }
//    
//    private Boolean deleteStudent(int lmuId){
//        
//    }
//
//    private StudentModel createStudentModel(......){
//        
//    }
//    
//    private void clearForm(){
//        
//    }
//    
//    private void loadStudentListToTable(){
//        
//    }
    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    /**
     * Handles the login button action. Validates the username and password
     * input and navigates to the main screen if credentials are correct.
     * Displays appropriate error messages otherwise.
     *
     * @param evt The action event triggered by the login button.
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // Get the username and password input
        String username = txtFldLoginUsername.getText();
        String password = new String(pwdFldLogin.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("admin") || !password.equals("admin")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * Handles the logout button action. Clears the login fields and switches
     * back to the login screen.
     *
     * @param evt The action event triggered by the logout button.
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        pwdFldLogin.setText("");
        txtFldLoginUsername.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnLearnMore1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLearnMore1ActionPerformed
        // TODO add your handling code here:
        // Switch the currently selected tab to the pnlAboutUs panel
    tabPaneMain.setSelectedComponent(pnlAboutUS);
    }//GEN-LAST:event_btnLearnMore1ActionPerformed

    
    private boolean isPatientIdExists(int patientId) {
    // Replace 'droneList' with the actual list or database storing drone data
    for (HospitalISModel hospital : patientList) { 
        if (hospital.getPatientId() == patientId) {
            return true; // Patient ID already exists
        }
    }
    return false; // Patient ID is unique
}
    
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        // Get the input data from the UI fields
    String patientId = txtPatientId.getText(); // Assuming txtPatientId is your JTextField for patientId
    String patientName = txtPatientName.getText(); // Assuming txtPatientName is your JTextField for patientName
    String doctorName = txtDoctorName.getText(); // Assuming txtDoctorName is your JTextField for doctorName
    String address = txtAddress.getText(); // Assuming txtAddress is your JTextField for address
    String age = txtAge.getText(); // Assuming txtAge is your JTextField for age
    String contact = txtContact.getText(); // Assuming txtContact is your JTextField for contact
    String department = txtDepartment.getText(); // Assuming txtDepartment is your JTextField for department

    // Validate the inputs using the ValidationUtil methods
    if (ValidationUtil.isValidDoctorName(doctorName, lblError) &&
        ValidationUtil.isValidAddress(address, lblError) &&
        ValidationUtil.isValidDepartment(department, lblError) &&
        ValidationUtil.isValidPatientId(patientId, lblError) &&
        ValidationUtil.isValidPatientName(patientName, lblError) &&
        ValidationUtil.isValidContact(contact, lblError) &&
        ValidationUtil.isValidAge(age, lblError)) {

        try {
            // Convert patientId and age from String to int
            int patientIdValue = Integer.parseInt(patientId); // Convert patientId from String to int
            
            if (isPatientIdExists(patientIdValue)) { // Call the method to check duplicate IDs
                JOptionPane.showMessageDialog(this, 
                        "Patient ID " + patientId + " already exists and cannot be added!", 
                        "Duplicate Entry", 
                        JOptionPane.ERROR_MESSAGE);
            } else{
            int ageValue = Integer.parseInt(age); // Convert age from String to int

            lblError.setText("");
            // Create a new instance of your model class (StudentModel)
            HospitalISModel patient = new HospitalISModel(patientIdValue, patientName, doctorName, address, ageValue, contact, department);

            // Call your method to register or update the patient (e.g., registerPatient or savePatient)
            registerPatient(patient);

            // Show a success message dialog
            JOptionPane.showMessageDialog(this, "Your data has been successfully updated.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (NumberFormatException e) {
            // If the conversion fails, show an error message
            JOptionPane.showMessageDialog(this, "Invalid input: Patient ID and Age must be numbers.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } else {
        // If validation fails, lblError will display the appropriate message
        JOptionPane.showMessageDialog(this, "Please enter valid data for all fields.", "Validation Error", JOptionPane.ERROR_MESSAGE);
    }  
    }//GEN-LAST:event_btnAddActionPerformed

    
    
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        // When the "Update" button is clicked
    int selectedRow = tblPatientList.getSelectedRow();
    if (selectedRow != -1) {
        // Get updated values from text fields
        String patientId = txtPatientId.getText();
        String patientName = txtPatientName.getText();
        String doctorName = txtDoctorName.getText();
        String address = txtAddress.getText();
        String age = txtAge.getText();
        String contact = txtContact.getText();
        String department = txtDepartment.getText();

        // Validate inputs (can be adjusted based on your validation requirements)
        if (ValidationUtil.isValidPatientId(patientId, lblError) &&
            ValidationUtil.isValidPatientName(patientName, lblError) &&
            ValidationUtil.isValidDoctorName(doctorName, lblError) &&
            ValidationUtil.isValidAddress(address, lblError) &&
            ValidationUtil.isValidAge(age, lblError) &&
            ValidationUtil.isValidContact(contact, lblError) &&
            ValidationUtil.isValidDepartment(department, lblError)) {

            lblError.setText("");
            // Update the table with new data
            tblPatientList.setValueAt(patientId, selectedRow, 0); // Update Patient ID
            tblPatientList.setValueAt(patientName, selectedRow, 1); // Update Patient Name
            tblPatientList.setValueAt(doctorName, selectedRow, 2); // Update Doctor Name
            tblPatientList.setValueAt(address, selectedRow, 3); // Update Address
            tblPatientList.setValueAt(age, selectedRow, 4); // Update Age
            tblPatientList.setValueAt(contact, selectedRow, 5); // Update Contact
            tblPatientList.setValueAt(department, selectedRow, 6); // Update Department

            // Update the student list (or your data source)
            HospitalISModel updatedPatient = new HospitalISModel(
                Integer.parseInt(patientId), // Convert Patient ID to int
                patientName,
                doctorName,
                address,
                Integer.parseInt(age), // Convert Age to int
                contact,
                department
            );
            patientList.set(selectedRow, updatedPatient); // Update the patient list (in-memory or database)

            JOptionPane.showMessageDialog(this, "Patient data successfully updated!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Invalid data! Please check your inputs.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No row selected to update!", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        try {
        // Get the Patient ID from the text field
        int patientIdToRemove = Integer.parseInt(txtPatientId.getText()); // Assuming txtPatientId is the text field for Patient ID
        lblError.setText("");
        DefaultTableModel model = (DefaultTableModel) tblPatientList.getModel(); // Get the table model

        boolean patientFound = false; // Flag to check if the patient ID exists in the table

        for (int i = 0; i < model.getRowCount(); i++) {
            // Get the Patient ID from the table and convert it to Integer
            Object patientIdObj = model.getValueAt(i, 0); // Assuming Patient ID is in the first column
            int patientIdInTable = 0;
            
            // Check if the value is an instance of Integer or String and convert accordingly
            if (patientIdObj instanceof Integer) {
                patientIdInTable = (int) patientIdObj;
            } else if (patientIdObj instanceof String) {
                patientIdInTable = Integer.parseInt((String) patientIdObj); // Convert String to int if needed
            }

            if (patientIdInTable == patientIdToRemove) {
                model.removeRow(i); // Remove the row from the table
                patientFound = true; // Mark patient as found
                break; // Exit the loop once the row is found and removed
            }
        }

        // Show a message if the patient was not found
        if (!patientFound) {
            JOptionPane.showMessageDialog(this, "Patient ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (NumberFormatException e) {
        // Handle invalid input (non-numeric Patient ID)
        JOptionPane.showMessageDialog(this, "Invalid Patient ID. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        // Clear all text fields
        lblError.setText("");
    txtDoctorName.setText("");
    txtAddress.setText("");
    txtDepartment.setText("");
    txtPatientId.setText("");
    txtPatientName.setText("");
    txtContact.setText("");
    txtAge.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblPatientListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientListMouseClicked
        // TODO add your handling code here:
        // Adding mouse listener to the table to populate text fields when a row is selected
    tblPatientList.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblPatientList.setSelectionBackground(new Color(173, 216, 230)); // Light Blue color
        tblPatientList.setSelectionForeground(Color.BLUE); // Black text for selection
            int selectedRow = tblPatientList.getSelectedRow();
            if (selectedRow != -1) {
                // Populate the text fields with values from the selected row
                txtPatientId.setText(tblPatientList.getValueAt(selectedRow, 0).toString()); // Patient ID
                txtPatientName.setText(tblPatientList.getValueAt(selectedRow, 1).toString()); // Patient Name
                txtDoctorName.setText(tblPatientList.getValueAt(selectedRow, 2).toString()); // Doctor Name
                txtAddress.setText(tblPatientList.getValueAt(selectedRow, 3).toString()); // Address
                txtAge.setText(tblPatientList.getValueAt(selectedRow, 4).toString()); // Age
                txtContact.setText(tblPatientList.getValueAt(selectedRow, 5).toString()); // Contact
                txtDepartment.setText(tblPatientList.getValueAt(selectedRow, 6).toString()); // Department
            }
        }
    });
    }//GEN-LAST:event_tblPatientListMouseClicked

    private void txtFldLoginUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldLoginUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldLoginUsernameActionPerformed

    private void txtDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartmentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        HospitalIS app = new HospitalIS();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnLearnMore1;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAboutImage;
    private javax.swing.JLabel lblAppointment;
    private javax.swing.JLabel lblCompanyLogo;
    private javax.swing.JLabel lblConnectUs;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFinancial;
    private javax.swing.JLabel lblFounderImage;
    private javax.swing.JLabel lblFounderSubTitle;
    private javax.swing.JLabel lblFounderTitle;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHomeImage;
    private javax.swing.JLabel lblHomeText1;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingImage;
    private javax.swing.JLabel lblLoadingText;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginImage;
    private javax.swing.JLabel lblLoginSubTitle;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblMainBarLogo;
    private javax.swing.JLabel lblMainBarSlogan;
    private javax.swing.JLabel lblMdImage;
    private javax.swing.JLabel lblMdSubTitle;
    private javax.swing.JLabel lblMdTitle;
    private javax.swing.JLabel lblPatient;
    private javax.swing.JLabel lblPharmacy;
    private javax.swing.JLabel lblReport;
    private javax.swing.JLabel lblService;
    private javax.swing.JLabel lblServiceImage;
    private javax.swing.JLabel lblSubHeading;
    private javax.swing.JLabel lblSubhead;
    private javax.swing.JLabel lblSupply;
    private javax.swing.JLabel lblSupport;
    private javax.swing.JLabel lblstaff;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUS;
    private javax.swing.JPanel pnlAdmin;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlService;
    private javax.swing.JPasswordField pwdFldLogin;
    private javax.swing.JScrollPane spTblStudent1;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tblPatientList;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtFldLoginUsername;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    // End of variables declaration//GEN-END:variables
}
